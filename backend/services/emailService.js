const Mailgun = require('mailgun.js');
const formData = require('form-data');
const { logger, logApiCall } = require('../utils/logger');
const { handleMailgunError } = require('../utils/errorHandler');
const { sanitizeText, sanitizeHtml } = require('../utils/sanitizer');

// Email Service for sending reports via Mailgun
class EmailService {
    constructor() {
        this.mailgunClient = null;
        this.isInitialized = false;
    }

    initialize(apiKey, domain) {
        if (!apiKey || !domain) {
            throw new Error('Mailgun API key and domain are required');
        }

        const mailgun = new Mailgun(formData);
        this.mailgunClient = mailgun.client({
            username: 'api',
            key: apiKey
        });

        this.domain = domain;
        this.isInitialized = true;
        logger.info('✅ Email service initialized');
    }

    async sendEmail(reportData, topics, recipients, reportDate = new Date()) {
        if (!this.isInitialized) {
            throw new Error('Email service not initialized');
        }

        if (!recipients || recipients.length === 0) {
            throw new Error('No email recipients provided');
        }

        logger.info('📧 Sending email...');

        const emailContent = this.createEmailTemplate(reportData, topics, reportDate);
        const subject = `Your Daily News - ${reportDate.toISOString().split('T')[0]}`;
        
        try {
            const messageData = {
                from: `AI News Agent <your-personal-news@${this.domain}>`,
                to: recipients,
                subject: subject,
                html: emailContent
            };

            logger.info('📧 Attempting to send email with Mailgun...');
            logger.info(`📧 From: ${messageData.from}`);
            logger.info(`📧 To: ${recipients.join(', ')}`);
            logger.info(`📧 Domain: ${this.domain}`);

            const response = await this.mailgunClient.messages.create(this.domain, messageData);
            logger.info('✅ Email sent successfully:', response.id);
            
            logApiCall('mailgun', 'sendEmail', { 
                recipientsCount: recipients.length,
                messageId: response.id 
            });
            
            return { success: true, messageId: response.id };
        } catch (error) {
            logger.error('❌ Mailgun error details:', {
                message: error.message,
                statusCode: error.statusCode,
                details: error.details || 'No details available'
            });
            handleMailgunError(error);
        }
    }

    createEmailTemplate(reportData, topics, reportDate) {
        // Simple HTML template for curated news articles
        const dateStr = reportDate.toLocaleDateString('en-US', { 
            weekday: 'long', 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
        });
        
        const articles = reportData.curatedArticles || [];
        const articlesHtml = articles.map(article => `
            <div style="margin-bottom: 20px; padding: 15px; border-left: 3px solid #667eea; background: #f8f9fa;">
                <h3 style="margin: 0 0 10px 0; color: #333;">${article.title}</h3>
                <p style="margin: 0 0 10px 0; color: #666; line-height: 1.5;">${article.summary}</p>
                <a href="${article.url}" style="color: #667eea; text-decoration: none;">Read full article →</a>
            </div>
        `).join('');
        
        return `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Your Daily News</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; text-align: center; border-radius: 8px; margin-bottom: 20px; }
                .content { background: white; padding: 20px; border-radius: 8px; }
                .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>📰 Your Daily News</h1>
                <p>${dateStr}</p>
            </div>
            <div class="content">
                <p>Here are your personalized news articles for today:</p>
                ${articlesHtml}
            </div>
            <div class="footer">
                <p>Generated by AI News Agent</p>
            </div>
        </body>
        </html>
        `;
    }
}

module.exports = EmailService; 